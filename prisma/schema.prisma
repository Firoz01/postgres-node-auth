// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique 
  phone String?
  vocavive vocavive_user?
  blog blog [] 
  coursebook coursebook_user?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([id,email])
}

model blog {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int 
  title String
  description String
  snippet String
  imageUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
}

model vocavive_user {
  id Int @id @default(autoincrement())
  package Package? @relation(fields: [package_id], references: [id])
  package_id Int? 
  user User @relation(fields: [userId,userEmail], references: [id,email])
  userId Int 
  userEmail String 
  parchase Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, userEmail])
}
model coursebook_user {
  id Int @id @default(autoincrement())
  package Package? @relation(fields: [package_id], references: [id])
  package_id Int? 
  user User @relation(fields: [userId,userEmail], references: [id,email])
  userId Int 
  userEmail String 
  parchase Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, userEmail])
}

model Package {
  id Int @id @default(autoincrement())
  name String
  title String
  vocavive_user vocavive_user[]
  coursebook_user coursebook_user[]
  variations Variation[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Variation {
  id Int @id @default(autoincrement())
  expiration Int
  bdt Int 
  discount_bdt Int @default(00)
  usd Int @default(00)
  discount_usd Int @default(00)
  status Boolean @default(false)
  packages Package @relation(fields: [package_id], references: [id], onDelete: Cascade)
  package_id Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

