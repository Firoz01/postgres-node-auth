// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int              @id @default(autoincrement())
  email      String           @unique
  type       String @default("student")
  phone      String?
  vocavive   vocavive_user?
  blog       blog[]
  coursebook coursebook_user?
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt

  @@unique([id, email])
}

model blog {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  title       String
  description String
  snippet     String
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model vocavive_user {
  id         Int             @id @default(autoincrement())
  package    Package?        @relation(fields: [package_id], references: [id])
  package_id Int?
  user       User            @relation(fields: [userId, userEmail], references: [id, email])
  userId     Int
  userEmail  String
  parchase   purchase_info[] 
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([userId, userEmail])
}

model coursebook_user {
  id         Int             @id @default(autoincrement())
  package    Package?        @relation(fields: [package_id], references: [id])
  package_id Int?
  user       User            @relation(fields: [userId, userEmail], references: [id, email])
  userId     Int
  userEmail  String
  purchase   purchase_info[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([userId, userEmail])
}

model purchase_info {
  id              Int               @id @default(autoincrement())
  vocavive_user   vocavive_user ? @relation(fields: [vocavive_id], references: [id])
  vocavive_id Int ?
  coursebook_user coursebook_user ? @relation(fields: [coursebook_id], references: [id])
  coursebook_id Int ?
  packages        Package          @relation(fields: [package_id], references: [id])
  package_id      Int
  variation        Variation       @relation(fields: [variation_id], references: [id])
  variation_id    Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model Package {
  id              Int               @id @default(autoincrement())
  name            String
  title           String
  purchase_info   purchase_info[]
  vocavive_user   vocavive_user[]
  coursebook_user coursebook_user[]
  variations      Variation[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model Variation {
  id           Int     @id @default(autoincrement())
  expiration   Int
  bdt          Int
  discount_bdt Int     @default(0)
  usd          Int     @default(0)
  discount_usd Int     @default(0)
  status       Boolean @default(false)
  packages     Package @relation(fields: [package_id], references: [id], onDelete: Cascade)
  package_id   Int
  purchase_info purchase_info[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
 
}
